<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.AgencyMapper">

    <resultMap type="com.ruoyi.system.domain.Agency" id="AgencyResult">
        <!-- 映射 Agency 类的属性到数据库字段 -->
        <result property="id" column="id" />
        <result property="name" column="name"/>
        <result property="createTime" column="create_time" />
        <result property="finishedWorkNumber" column="finished_work_number" />
        <result property="positive" column="positive" />
        <result property="integrity" column="integrity" />
        <result property="evaluations" column="evaluations" />
        <result property="managerId" column="manager_id" />
        <result property="doctorId" column="doctor_id" />
        <result property="location" column="location" />
        <result property="itineraryInfo" column="itinerary_info" />
        <result property="picture" column="picture" />
    </resultMap>

    <sql id="selectAgencyVo">
        select id, name, phone, location, positive, integrity, picture,evaluations from agency
    </sql>

    <select id="selectAgencyById" resultType="com.ruoyi.system.domain.Agency">
        SELECT * FROM agency WHERE id = #{id}
    </select>


    <insert id="insertAgency" parameterType="com.ruoyi.system.domain.Agency">
        INSERT INTO agency (name, create_time, finished,positive, integrity, evaluations,
                            manager_id, doctor_id, location, itinerary_info,phone,picture)
        VALUES (#{name}, #{createTime}, #{finishedWorkNumber}, #{positive}, #{integrity}, #{evaluations},
                #{managerId}, #{doctorId}, #{location}, #{itineraryInfo}, #{phone},#{picture})
    </insert>

    <update id="updateAgency" parameterType="com.ruoyi.system.domain.Agency">
        UPDATE agency
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="positive != null">positive = #{positive},</if>
            <if test="integrity != null">integrity = #{integrity},</if>
            <if test="evaluations != null">evaluations = #{evaluations},</if>
            <if test="picture != null">picture = #{picture},</if>
            <if test="location != null">location = #{location},</if>
            <if test="phone != null">phone = #{phone},</if>
        </trim>
        where id = #{id}
    </update>


    <delete id="deleteAgencyById" parameterType="String">
        DELETE FROM agency WHERE id = #{id}
    </delete>

    <delete id="deleteAgencyByIds" parameterType="String">
        DELETE FROM agency WHERE id IN
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectAgencyByName" parameterType="String" resultMap="AgencyResult">
        <include refid="selectAgencyVo"/>
        where name = #{name}
    </select>

    <select id="selectAgencyList" parameterType="Agency" resultMap="AgencyResult">
        <include refid="selectAgencyVo"/>
        <where>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="picture != null  and picture != ''"> and picture = #{picture}</if>
            <if test="positive != null  and positive != ''"> and positive = #{positive}</if>
            <if test="location != null  and location != ''"> and location = #{location}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="integrity != null  and integrity != ''"> and integrity = #{integrity}</if>
            <if test="evaluations != null  and evaluations != ''"> and evaluations = #{evaluations}</if>
        </where>
    </select>

</mapper>